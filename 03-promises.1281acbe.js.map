{"mappings":"gfAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAST,EATmBC,EAShB,UAROG,KAAKC,SAAW,GAEpCH,EAAAI,OAAOC,QAAQ,uBAAwCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAE7DC,EAAAI,OAAOG,QAAQ,sBAAuCD,OAAfR,EAAS,QAAYQ,OAANP,EAAM,SAK7DS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,QAAQC,IAAI,uBAAwCL,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,IAE3Da,OAAM,SAAAH,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,QAAQC,IAAI,sBAAqCL,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// const isSuccess = false;\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//   }, 2000);\n// });\n\n// // Will run first\n// console.log(\"Before promise.then()\");\n\n// // Registering promise callbacks\n// promise.then(\n//   // onResolve will run third or not at all\n//   (value) => {\n//     console.log(\"onResolve call inside promise.then()\");\n//     console.log(value); // \"Success! Value passed to resolve function\"\n//   },\n//   // onReject will run third or not at all\n//   (error) => {\n//     console.log(\"onReject call inside promise.then()\");\n//     console.log(error); // \"Error! Error passed to reject function\"\n//   }\n// );\n\n// // Will run second\n// console.log(\"After promise.then()\");\n"],"names":["position","delay","$h6c0i","parcelRequire","Math","random","Notify","success","concat","failure","then","param","console","log","catch"],"version":3,"file":"03-promises.1281acbe.js.map"}